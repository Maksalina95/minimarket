import { showTerms } from './terms.js';
import { showAddress } from './address.js';
import { showDelivery } from './delivery.js';
import { showContacts } from './contacts.js';
import { showCash } from './cash.js';
import { showConditions } from './conditions.js';


export function showProfileAccordion(container, user) {
  container.innerHTML = `
    <div class="breadcrumbs">
      <span id="crumb-home">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</span>
      <span id="crumb-section" style="display:none;"> ‚Üí <span id="section-name"></span></span>
    </div>

    <h2>–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ ${user.name}</h2>
    <p>–í–∞—à –Ω–æ–º–µ—Ä: ${user.phone}</p>

    <div class="accordion">
      <div class="accordion-item">
        <button class="accordion-header" data-section="–£—Å–ª–æ–≤–∏—è">üìú –£—Å–ª–æ–≤–∏—è</button>
        <div class="accordion-content"></div>
      </div>
      <div class="accordion-item">
        <button class="accordion-header" data-section="–ê–¥—Ä–µ—Å">üìç –ê–¥—Ä–µ—Å</button>
        <div class="accordion-content"></div>
      </div>
      <div class="accordion-item">
        <button class="accordion-header" data-section="–î–æ—Å—Ç–∞–≤–∫–∞">üöö –î–æ—Å—Ç–∞–≤–∫–∞</button>
        <div class="accordion-content"></div>
      </div>
      <div class="accordion-item">
        <button class="accordion-header" data-section="–ö–æ–Ω—Ç–∞–∫—Ç—ã">üì± –ö–æ–Ω—Ç–∞–∫—Ç—ã</button>
        <div class="accordion-content"></div>
      </div>
    </div>
    <div class="accordion-item">
  <button class="accordion-header" data-section="–ö–æ—Ç—ë–ª-—ç—Ç–æ..">üí≥ –ö–æ—Ç—ë–ª-—ç—Ç–æ</button>
  <div class="accordion-content"></div>
</div>
<div class="accordion-item">
  <button class="accordion-header" data-section="–ó–∞–∫–∞–∑ –Ω–∞–ª–∏—á–Ω—ã–º–∏">üìÑ –ó–∞–∫–∞–∑ –Ω–∞–ª–∏—á–Ω—ã–º–∏</button>
  <div class="accordion-content"></div>
</div>

    <button id="logoutBtn" class="logout-button">–í—ã–π—Ç–∏</button>
  `;

  const headers = container.querySelectorAll(".accordion-header");
  const crumbSection = document.getElementById("crumb-section");
  const sectionName = document.getElementById("section-name");

  // –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
  const sectionMap = {
  "–£—Å–ª–æ–≤–∏—è": showTerms,
  "–ê–¥—Ä–µ—Å": showAddress,
  "–î–æ—Å—Ç–∞–≤–∫–∞": showDelivery,
  "–ö–æ–Ω—Ç–∞–∫—Ç—ã": showContacts,
  "–ö–æ—Ç—ë–ª-—ç—Ç–æ..": showCash,
  "–ó–∞–∫–∞–∑ –Ω–∞–ª–∏—á–Ω—ã–º–∏": showConditions,
};

  headers.forEach(header => {
    header.addEventListener("click", () => {
      const content = header.nextElementSibling;
      const isOpen = content.style.display === "block";

      // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –±–ª–æ–∫–∏
      container.querySelectorAll(".accordion-content").forEach(c => {
        c.style.display = "none";
        c.innerHTML = "";
      });

      if (!isOpen) {
        content.style.display = "block";
        sectionName.textContent = header.dataset.section;
        crumbSection.style.display = "inline";

        // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
        const func = sectionMap[header.dataset.section];
        if (func) {
          func(content);
        } else {
          content.innerHTML = "<p>–ó–¥–µ—Å—å —Ç–µ–∫—Å—Ç –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω</p>";
        }
      } else {
        crumbSection.style.display = "none";
        content.innerHTML = "";
      }
    });
  });

  // –ö–Ω–æ–ø–∫–∞ –í—ã–π—Ç–∏
  const logoutBtn = document.getElementById("logoutBtn");
  if (logoutBtn) {
    logoutBtn.addEventListener("click", () => {
      localStorage.removeItem("user");
      location.reload();
    });
  }
}
