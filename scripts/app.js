// --- –ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞) ---
import { showHome } from "./home.js";
import { showCatalog, showCategoryPage } from "./catalog.js"; // ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ showCategoryPage
import { showProductPage } from "./productPage.js";
import { setupSearchGlobal } from "./search.js";
import { showFilteredProducts } from "./filtered.js"; // üëà –î–û–ë–ê–í–ò–¢–¨
import { showFavoritesPage } from './favorites.js';
import { showProfile } from './profilePage.js';
import { showConditions } from './conditions.js';
import { showTerms } from './terms.js';
import { showAddress } from './address.js';
import { showCash } from './cash.js';
import { showContacts } from './contacts.js';
import { showDelivery } from './delivery.js';


// --- –õ–æ–≥–∏–∫–∞ PWA: –∫–Ω–æ–ø–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ---
let deferredPrompt;

window.addEventListener('beforeinstallprompt', (e) => {
  e.preventDefault();
  deferredPrompt = e;

  const installBtn = document.getElementById('installBtn');
  if (installBtn) {
    installBtn.style.display = 'inline-block';
    installBtn.addEventListener('click', async () => {
      installBtn.style.display = 'none';
      deferredPrompt.prompt();
      const { outcome } = await deferredPrompt.userChoice;
console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: ${outcome}`);      deferredPrompt = null;
    });
  }
});


// --- DOM —ç–ª–µ–º–µ–Ω—Ç—ã ---
const content = document.getElementById("content");
const navLinks = document.querySelectorAll("nav a");
const registerSection = document.getElementById('registerSection');
const mainApp = document.getElementById('mainApp');
const profilePage = document.getElementById('profilePage');
const welcomeUser = document.getElementById('welcomeUser');
const profileName = document.getElementById('profileName');
const profilePhone = document.getElementById('profilePhone');
const slider = document.querySelector(".slider");


// --- –ù–∞–≤–∏–≥–∞—Ü–∏—è ---
function setActive(page) {
  navLinks.forEach(link => link.classList.remove("active"));
  const activeLink = document.querySelector(`nav a[data-page="${page}"]`);
  if (activeLink) activeLink.classList.add("active");
}

export async function loadPage(page, data = null, skipHistory = false) {
  const user = JSON.parse(localStorage.getItem('user'));
  if (user && user.phone) {
    try {
      const response = await fetch('/api/check-block', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ phone: user.phone })
      });
      const result = await response.json();
      if (result.blocked) {
        alert("–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω.");
        localStorage.removeItem("user");
        location.reload();
        return;
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:", error);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.");
      return;
    }
  }
  
  // –°–∫—Ä—ã–≤–∞–µ–º –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
profilePage.style.display = 'none';
// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
content.style.display = 'block';
// –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
welcomeUser.style.display = 'none';
  
  setActive(page);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º —Å–ª–∞–π–¥–µ—Ä
if (slider) {
  if (page === "product") {
    slider.style.display = "none";
  } else {
    slider.style.display = "block";
  }
}

  const searchContainer = document.querySelector(".search-container");
  if (page === "home" || page === "catalog") {
    searchContainer.style.display = "flex";
  } else {
    searchContainer.style.display = "none";
  }

  if (!skipHistory) {
    const url = page === "product" ? `#product-${data}` : `#${page}`;
    history.pushState({ page, data }, "", url);
  }

  profilePage.style.display = 'none';
  welcomeUser.style.display = 'none';

  if (page === "home") {
    await showHome(content);
  } else if (page === "catalog") {
    await showCatalog(content);
  } else if (page === "filtered") {
    await showFilteredProducts(content, data.category, data.subcategory);    
  } else if (page === "product") {
    await showProductPage(content, data);
  } else if (page === "category") {
  await showCategoryPage(content, data);   // ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ
} else if (page === "favorites") {
  await showFavoritesPage(content);
} else if (page === "profile") {
  if (user) {
    profilePage.style.display = 'block';
    content.style.display = 'none';
    showProfile(profilePage, user);
  } else {
    profilePage.style.display = 'none';
    content.style.display = 'block';
    await showHome(content);
    setActive('home');
  }
  return; // –≤–∞–∂–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
} else if (page === "conditions") {
  await showConditions(content);
} else if (page === "terms") {
  await showTerms(content);
} else if (page === "address") {
  await showAddress(content);
} else if (page === "cash") {
  await showCash(content);
} else if (page === "contacts") {
  await showContacts(content);
} else if (page === "delivery") {
    await showDelivery(content);
  }
} // <-- –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é loadPage

// --- –°–ª–∞–π–¥–µ—Ä ---
// --- –°–ª–∞–π–¥–µ—Ä ---
function initSlider() {
  let currentSlide = 0;
  const slides = document.querySelectorAll('.slider .slide');
  if (slides.length === 0) return;

  function showSlide(index) {
    slides.forEach((slide, i) => {
      slide.classList.toggle('active', i === index);

      // –£–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
      const video = slide.querySelector('video');
      if (video) {
        if (i === index) {
          video.play().catch(() => {});  // –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–∏–¥–µ–æ
        } else {
          video.pause();
          video.currentTime = 0;         // —Å–±—Ä–æ—Å –≤–∏–¥–µ–æ –Ω–∞ –Ω–∞—á–∞–ª–æ
        }
      }
    });
  }

  showSlide(currentSlide);

  setInterval(() => {
    currentSlide = (currentSlide + 1) % slides.length;
    showSlide(currentSlide);
  }, 5000); // —Å–º–µ–Ω–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
}

// --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ---
function showMainApp() {
  registerSection.style.display = 'none';
  mainApp.style.display = 'block';
  loadPage("home");

  // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–∞–π–¥–µ—Ä–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ ---
  initSlider();
}

function showWelcome(name) {
  welcomeUser.textContent = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${name}!`;
  welcomeUser.style.display = 'block';
  setTimeout(() => {
    welcomeUser.style.display = 'none';
  }, 6000);
}

// --- –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
document.addEventListener("DOMContentLoaded", async () => {
  const user = JSON.parse(localStorage.getItem('user'));

  if (user && user.name && user.phone) {
    try {
      const response = await fetch('/api/check-block', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ phone: user.phone })
      });

      const result = await response.json();

      if (result.blocked) {
        alert("–≠—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –í—Ö–æ–¥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.");
        localStorage.removeItem("user");
        registerSection.style.display = 'block';
        return;
      }

      showMainApp();
      showWelcome(user.name);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.");
      registerSection.style.display = 'block';
    }

  } else {
    registerSection.style.display = 'block';
  }

  // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ---
  document.getElementById("register-form").addEventListener("submit", (e) => {
    e.preventDefault();
    const name = document.getElementById("name").value.trim();
    const phone = document.getElementById("phone").value.trim();

    if (name && phone) {
      fetch("/api/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, phone }),
      })
      .then(response => response.json())
      .then(data => {
        console.log("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
        if (data.success) {
          localStorage.setItem("user", JSON.stringify({ name, phone }));

          fetch('/api/check-block', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ phone })
          })
          .then(res => res.json())
          .then(result => {
            if (result.blocked) {
              alert('–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
              localStorage.removeItem("user");
              registerSection.style.display = 'block';
            } else {
              showMainApp();
              showWelcome(name);
            }
          })
          .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:", error);
            alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.");
          });

        } else {
          alert("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " + (data.error || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"));
        }
      });
    }
  });

  // --- –ù–∞–≤–∏–≥–∞—Ü–∏—è ---
  navLinks.forEach(link => {
    link.addEventListener("click", e => {
      e.preventDefault();
      const page = link.getAttribute("data-page");
      loadPage(page);
    });
  });

  setupSearchGlobal();

  // --- –ò—Å—Ç–æ—Ä–∏—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ (–Ω–∞–∑–∞–¥/–≤–ø–µ—Ä—ë–¥) ---
  window.onpopstate = (event) => {
    const state = event.state;
    if (state?.page === 'product') {
      loadPage('product', state.data, true);
    } else if (state?.page) {
      loadPage(state.page, state.data, true);
    } else {
      loadPage("home", null, true);
    }
  };
});
